@page "/delete/{id}"
@using ProductManagement.Client.Model
@using System.Text
@using System.Text.Json
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

<PageTitle>Delete Product</PageTitle>

<div class="d-flex justify-content-center">
    @if (product == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
            <div class="container border p-3">
            <h2 class="text-center">Delete Product</h2>
            <hr />
                <div class="row">
                <div class="col-12 col-lg-2 col-xl-2">
                        <label for="Name" class="control-label pt-2" style="font-size:20px;">Name</label>
                    </div>
                <div class="col-12 col-lg-10 col-xl-10 pb-3">
                        <input id="Name" class="form-control" @bind="product.ProductName" disabled />
                    </div>
                <div class="col-12 col-lg-2 col-xl-2">
                        <label class="control-label pt-2" style="font-size:20px;">Price</label>
                    </div>
                <div class="col-12 col-lg-10 col-xl-10 pb-3">
                    <input id="Price" class="form-control" @bind="product.Price" disabled />
                    </div>
                <div class="col-12 col-lg-2 col-xl-2">
                        <label class="control-label pt-2" style="font-size:20px;">Description</label>
                    </div>
                <div class="col-12 col-lg-10 col-xl-10 pb-3">
                    <textarea id="Description" class="form-control" @bind="product.Description" disabled rows="5"></textarea>
                    </div>
                <div class="col-12 col-lg-2 col-xl-2">
                        <label for="Availability" class="control-label" style="font-size:20px;">Availability</label>
                    </div>
                <div class="col-12 col-lg-10 col-xl-10 pb-3">
                    @if (product.Availability)
                    {
                        <span class="badge text-white text-bg-success">InStock</span>
                    }
                    else
                    {
                        <span class="badge text-white text-bg-danger">OutOfStock</span>
                    }
                    </div>                  
                    <div class="col-5 offset-2">
                        <a href="/" class="btn-primary btn form-control ">Back to List</a>
                    </div>
                    <div class="col-5">
                    <input @onclick="@(() => DeleteProduct())" value="Delete" class="btn btn-danger form-control" />
                    </div>
                </div>
                <div>
                </div>
            </div>       
    }
</div>

@code {
    [Parameter]
    public string? Id { get; set; }

    private Product? product;

    protected override async Task OnInitializedAsync()
    {
        int productId = Convert.ToInt32(Id);
        product = await Http.GetFromJsonAsync<Product>($"api/Product/{productId}");
    }

    public async Task DeleteProduct()
    {
       var response= await JSRuntime.InvokeAsync<bool>("showDeleteConfirmation");


        if (response)
        {
            var res = await Http.DeleteFromJsonAsync<bool>($"api/Product/{product.ProductId}");
            if (res)
            {
                await JSRuntime.InvokeAsync<bool>("SuccessAlert", "Product Deleted Successfully");
                Navigation.NavigateTo("/");
            }
            else
            {
                await JSRuntime.InvokeAsync<bool>("Swal.fire", "Error", "An error occurred while deleting the product.", "error");
            }
        }
    }
}